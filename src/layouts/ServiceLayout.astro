---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import { createServicePageSchema, createBreadcrumbSchema } from '../lib/schema/factories';
import Breadcrumbs from '@/components/Breadcrumbs.astro';

interface Props {
  service: CollectionEntry<'services'>;
}

const { service } = Astro.props;
const { Content } = await service.render();

const serviceDetails = {
  slug: service.slug,
  name: service.data.name ?? service.data.title,
  description: service.data.description,
  offers: service.data.offers?.map(offer => ({
    name: offer.name,
    description: offer.description
  }))
};

const schema = await createServicePageSchema(serviceDetails);
const currentCrumbName = service.data.breadcrumbDisplayText ?? service.data.linkText ?? service.data.menuText ?? service.data.title;
const breadcrumbItems = [
  { name: 'Home', url: 'https://goflow.plumbing/' },
  { name: 'Services', url: 'https://goflow.plumbing/plumbing-services/' },
  { name: currentCrumbName, url: `https://goflow.plumbing/${service.slug}/` }
];
const breadcrumbSchema = await createBreadcrumbSchema(breadcrumbItems);
const combinedSchema: any = [schema, breadcrumbSchema];
---

<BaseLayout 
  title={service.data.title}
  description={service.data.description}
  schema={combinedSchema}
>
  <article class="article">
    <Breadcrumbs items={[{ name: 'Home', path: '/' }, { name: 'Services', path: '/plumbing-services/' }, { name: currentCrumbName }]} />
    {service.data.heroImage && (
      <div class="mb-8">
        <img
          src={service.data.heroImage}
          alt={service.data.title}
        />
      </div>
    )}
    
    <div class="markdown-content">
      <Content />
    </div>

    <div class="call-to-action">
      <h2>Ready to Get Started?</h2>
      <p>Contact us today for professional plumbing services you can trust.</p>
      <a href="/contact-us/">
        Contact Us Now
      </a>
    </div>
  </article>
</BaseLayout>
