---
import BaseLayout from './BaseLayout.astro';
import type { CollectionEntry } from 'astro:content';
import type { Schema } from '../types/schema';
import '../styles/markdown.css';
import '../styles/pages.css';
import '../styles/prose.css';

interface Props {
  page: CollectionEntry<'pages'> & {
    data: {
      schema?: Schema;
    };
  };
}

const { page } = Astro.props;
const { title, description, schema, microdata, teamMembers, companyValues, certifications } = page.data;
---

<BaseLayout title={title} description={description} schema={schema}>
  <article 
    class="article"
    itemscope
    itemtype={microdata?.type ? `https://schema.org/${microdata.type}` : undefined}
  >
    {microdata?.properties && Object.entries(microdata.properties).map(([key, value]) => (
      <meta itemprop={key} content={value} />
    ))}

    {teamMembers && (
      <div class="team-section" itemscope itemtype="https://schema.org/Organization">
        {teamMembers.map(member => (
          <div class="team-member" itemscope itemtype="https://schema.org/Person" id={member.url?.split('#')[1]}>
            <meta itemprop="name" content={member.name} />
            {member.givenName && <meta itemprop="givenName" content={member.givenName} />}
            {member.familyName && <meta itemprop="familyName" content={member.familyName} />}
            <meta itemprop="jobTitle" content={member.jobTitle} />
            <meta itemprop="description" content={member.description} />
            {member.telephone && <meta itemprop="telephone" content={member.telephone} />}
            {member.email && <meta itemprop="email" content={member.email} />}
            {member.url && <meta itemprop="url" content={member.url} />}
            
            {member.address && (
              <div itemscope itemtype="https://schema.org/PostalAddress">
                <meta itemprop="streetAddress" content={member.address.streetAddress} />
                <meta itemprop="addressLocality" content={member.address.addressLocality} />
                <meta itemprop="addressRegion" content={member.address.addressRegion} />
                <meta itemprop="postalCode" content={member.address.postalCode} />
                <meta itemprop="addressCountry" content={member.address.addressCountry} />
              </div>
            )}

            {member.alumniOf?.map(education => (
              <div itemscope itemtype="https://schema.org/EducationalOrganization">
                <meta itemprop="name" content={education.name} />
                {education.degree && <meta itemprop="degree" content={education.degree} />}
                {education.startDate && <meta itemprop="startDate" content={education.startDate} />}
                {education.endDate && <meta itemprop="endDate" content={education.endDate} />}
              </div>
            ))}

            {member.hasCredential?.map(credential => (
              <div itemscope itemtype="https://schema.org/EducationalOccupationalCredential">
                <meta itemprop="name" content={credential.name} />
                <meta itemprop="credentialCategory" content="professional" />
                <meta itemprop="recognizedBy" content={credential.issuer} />
                {credential.dateIssued && <meta itemprop="dateCreated" content={credential.dateIssued.toISOString()} />}
              </div>
            ))}

            {member.award?.map(award => (
              <meta itemprop="award" content={award} />
            ))}

            {member.socialProfiles?.map(profile => (
              <link itemprop="sameAs" href={profile.url} />
            ))}
          </div>
        ))}
      </div>
    )}

    {companyValues && (
      <div class="values-section">
        {companyValues.map(value => (
          <div itemscope itemtype="https://schema.org/Thing">
            <meta itemprop="name" content={value.name} />
            <meta itemprop="description" content={value.description} />
            {value.items && (
              <div itemscope itemtype="https://schema.org/ItemList">
                {value.items.map((item, index) => (
                  <meta itemprop="itemListElement" content={item} />
                ))}
              </div>
            )}
          </div>
        ))}
      </div>
    )}

    {certifications && (
      <div class="certifications-section">
        {certifications.map(cert => (
          <div itemscope itemtype="https://schema.org/EducationalOccupationalCredential">
            <meta itemprop="name" content={cert.name} />
            <meta itemprop="credentialCategory" content="professional" />
            <meta itemprop="recognizedBy" content={cert.issuer} />
            {cert.dateIssued && <meta itemprop="dateCreated" content={cert.dateIssued.toISOString()} />}
            {cert.validUntil && <meta itemprop="validUntil" content={cert.validUntil.toISOString()} />}
          </div>
        ))}
      </div>
    )}

    <div class="markdown-content">
      <slot />
    </div>

    <!-- Call to Action -->
    <div class="call-to-action">
      <h2>Need Professional Plumbing Service?</h2>
      <p>
        We're here to help with all your plumbing needs in Sonoma and Marin County.
      </p>
      <div class="links-container">
        <a
          href="/contact-us"
          class="btn btn-primary"
        >
          Contact Us Now
        </a>
        <a
          href="/emergency-plumbing-services"
          class="btn btn-accent"
        >
          Emergency Service
        </a>
      </div>
    </div>

    <!-- Service Areas -->
    <div class="service-areas">
      <div>
        <h3>Sonoma County Service</h3>
        <p>Serving <a href="/santa-rosa-plumbing">Santa Rosa</a>, <a href="/petaluma-plumbing">Petaluma</a>, Rohnert Park, and surrounding areas.</p>
        <a href="/sonoma-county-plumbing">
          View Sonoma Services →
        </a>
      </div>
      <div>
        <h3>Marin County Service</h3>
        <p>Serving <a href="/san-rafael-plumbing">San Rafael</a>, Novato, Mill Valley, and surrounding areas.</p>
        <a href="/marin-county-plumbing">
          View Marin Services →
        </a>
      </div>
    </div>
  </article>
</BaseLayout>
